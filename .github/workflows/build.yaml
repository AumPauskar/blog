# Name of your workflow.
name: Build Hugo site

# Controls when the workflow will run.
on:
  # Triggers the workflow on push events for the "main" branch.
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab in GitHub.
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # This workflow contains a single job called "build".
  build:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
      # Step 1: Check out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Use 'recursive' to ensure nested submodules (like a theme's theme) are fetched.
          submodules: recursive
          # Fetches all history for .GitInfo and .Lastmod.
          fetch-depth: 0

      # Step 2: Set up the Hugo environment.
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          # Pinning to a specific version prevents breaking changes from 'latest'.
          # Version 0.125.4 is a stable and recent choice compatible with most themes.
          hugo-version: '0.125.4'
          # Use the "extended" version of Hugo, which is required for SCSS/SASS support in many themes.
          extended: true

      # Step 3: Build the Hugo site.
      # The `hugo` command converts your Markdown content into static HTML files in the 'public' directory.
      - name: Build
        run: hugo --minify

      # Step 4: Upload the built site as a GitHub Pages artifact.
      # This artifact will be picked up by the 'deploy' job in your deployment workflow.
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # The folder to upload. Hugo builds to 'public' by default.
          path: ./public
