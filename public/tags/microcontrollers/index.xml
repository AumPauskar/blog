<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microcontrollers on Aum&#39;s blogging site</title>
    <link>https://aumpauskar.github.io/blog/tags/microcontrollers/</link>
    <description>Recent content in Microcontrollers on Aum&#39;s blogging site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Dec 2023 21:29:49 +0530</lastBuildDate>
    <atom:link href="https://aumpauskar.github.io/blog/tags/microcontrollers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Raspberry Pi</title>
      <link>https://aumpauskar.github.io/blog/posts/iot/raspberry_pi/</link>
      <pubDate>Tue, 19 Dec 2023 21:29:49 +0530</pubDate>
      <guid>https://aumpauskar.github.io/blog/posts/iot/raspberry_pi/</guid>
      <description>Raspberry Pi The raspberry pi is a series of small single-board computers developed in the United Kingdom by the Raspberry Pi Foundation to promote teaching of basic computer science in schools and in developing countries.&#xA;Setting up Raspberry Pi As standard the Raspberry Pi comes without an operating system. It depends on the user which operating system is installed within the computer. The operating system can be installed on the Raspberry Pi using the following steps:</description>
    </item>
    <item>
      <title>Modulated motor control with arduino</title>
      <link>https://aumpauskar.github.io/blog/posts/projects/motor_encoder/</link>
      <pubDate>Tue, 21 Nov 2023 22:20:04 +0530</pubDate>
      <guid>https://aumpauskar.github.io/blog/posts/projects/motor_encoder/</guid>
      <description>Motor Encoder Components Arduino Uno 4x4 Keypad I2C LCD DC Motor with encoder L293D Motor Driver Connections Display connections From (I2C display) To (arduino) 1 VCC 5V 2 GND GND 3 SDA SDA 4 SCL SCL Keypad connections From (Keypad) To (arduino) 1 Row 1 D13 2 Row 2 D12 3 Row 3 D11 4 Row 4 D10 5 Col 1 D9 6 Col 2 D8 7 Col 3 D7 8 Col 4 D4 Motor connections From (Motor) To 1 Motor negative Output 4 (L293D) 2 Motor positive Output 3 (L293D) 3 Encoder ground GND (L293D) 4 Channel B D3 (arduino) 5 Channel A D2 (arduino) 6 Encoder power 5V (arduino) L293D connections From (L293D) To (arduino) 1 Power 1 5V 2 Input 4 D5 3 Output 4 refer above 4 Ground GND (both arduino/motor) 5 Ground GND (both arduino/motor) 6 Output 3 refer above 7 Input 3 D6 8 Enable 3,4 5V 9 Enable 1,2 5V 10 Input 1 N/A 11 Output 1 N/A 12 Ground GND 13 Ground GND 14 Output 2 N/A 15 Input 2 N/A 16 Power 2 5V Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 // ---------- // keypad setup #include &amp;lt;Keypad.</description>
    </item>
    <item>
      <title>Working with ARM microcontroller using Keil uVision4</title>
      <link>https://aumpauskar.github.io/blog/posts/iot/arm/</link>
      <pubDate>Mon, 20 Nov 2023 12:59:45 +0530</pubDate>
      <guid>https://aumpauskar.github.io/blog/posts/iot/arm/</guid>
      <description>ARM Basics Advanced RISC Machine (ARM) is a family of reduced instruction set computing (RISC) architectures for computer processors, configured for various environments. Arm Holdings develops the architecture and licenses it to other companies, who design their own products that implement one of those architectures‍—‌including systems-on-chips (SoC) and systems-on-modules (SoM) that incorporate memory, interfaces, radios, etc. It also designs cores that implement this instruction set and licenses these designs to a number of companies that incorporate those core designs into their own products.</description>
    </item>
    <item>
      <title>Using i386 IC using Keil uVision5 and Embedded C</title>
      <link>https://aumpauskar.github.io/blog/posts/iot/embeddedc/</link>
      <pubDate>Thu, 16 Nov 2023 10:37:42 +0530</pubDate>
      <guid>https://aumpauskar.github.io/blog/posts/iot/embeddedc/</guid>
      <description>Embedded C Embedded C is used in embedded systems and iot deviced such as Arduino and mico IC&amp;rsquo;s. To emulate this we can use Keil, however this can be only run on Windows, to run this on linux based distros use wine.&#xA;Procedure to run The following are the steps to run a code on Keil Note: Here we are working on intel 8051AH microcontroller&#xA;Install and run keil If you are on a windows system you can run the exe file locally, if you are on a linux machine you can run keil through wine and it will function just like you are running it on windows natively.</description>
    </item>
    <item>
      <title>Arduino control with peripherals</title>
      <link>https://aumpauskar.github.io/blog/posts/iot/arduino/</link>
      <pubDate>Thu, 16 Nov 2023 10:37:04 +0530</pubDate>
      <guid>https://aumpauskar.github.io/blog/posts/iot/arduino/</guid>
      <description>Arduino 14 IO, 6//&#xA;ESP 8266 wifi&#xA;Sketch - name of the program Setup - IO setup Loop - while loop DHT 11 sol moisture SR04 ultrasonic HC05 bluetooth ESP 01 wifi&#xA;Q. LED blink 1 2 3 4 5 6 7 8 9 10 11 const int ledVar = 13; void setup() { pinMode(ledVar, OUTPUT); } void loop() { digitalWrite(ledVar, HIGH); delay(1000); digitalWrite(ledVar, LOW); delay(1000); } Q. Interface dht 11 with arduino uno and display humidity and temperature on serial monitor 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include &amp;lt;dht.</description>
    </item>
  </channel>
</rss>
