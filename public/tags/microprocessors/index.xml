<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microprocessors on Aum&#39;s blogging site</title>
    <link>https://aumpauskar.github.io/blog/tags/microprocessors/</link>
    <description>Recent content in Microprocessors on Aum&#39;s blogging site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Dec 2023 21:29:49 +0530</lastBuildDate>
    <atom:link href="https://aumpauskar.github.io/blog/tags/microprocessors/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Raspberry Pi</title>
      <link>https://aumpauskar.github.io/blog/posts/iot/raspberry_pi/</link>
      <pubDate>Tue, 19 Dec 2023 21:29:49 +0530</pubDate>
      <guid>https://aumpauskar.github.io/blog/posts/iot/raspberry_pi/</guid>
      <description>&lt;h1 id=&#34;raspberry-pi&#34;&gt;Raspberry Pi&lt;/h1&gt;&#xA;&lt;p&gt;The raspberry pi is a series of small single-board computers developed in the United Kingdom by the Raspberry Pi Foundation to promote teaching of basic computer science in schools and in developing countries.&lt;/p&gt;&#xA;&lt;h2 id=&#34;setting-up-raspberry-pi&#34;&gt;Setting up Raspberry Pi&lt;/h2&gt;&#xA;&lt;p&gt;As standard the Raspberry Pi comes without an operating system. It depends on the user which operating system is installed within the computer. The operating system can be installed on the Raspberry Pi using the following steps:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Working with ARM microcontroller using Keil uVision4</title>
      <link>https://aumpauskar.github.io/blog/posts/iot/arm/</link>
      <pubDate>Mon, 20 Nov 2023 12:59:45 +0530</pubDate>
      <guid>https://aumpauskar.github.io/blog/posts/iot/arm/</guid>
      <description>&lt;h1 id=&#34;arm&#34;&gt;ARM&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Basics&#xA;Advanced RISC Machine (ARM) is a family of reduced instruction set computing (RISC) architectures for computer processors, configured for various environments. Arm Holdings develops the architecture and licenses it to other companies, who design their own products that implement one of those architectures‍—‌including systems-on-chips (SoC) and systems-on-modules (SoM) that incorporate memory, interfaces, radios, etc. It also designs cores that implement this instruction set and licenses these designs to a number of companies that incorporate those core designs into their own products.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;running-arm-ic-within-simulator&#34;&gt;Running ARM IC within simulator&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Download and install &lt;a href=&#34;https://www.keil.com/download/product/&#34;&gt;Keil uVision - MDK ARM&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Go to &lt;code&gt;project&lt;/code&gt; in the menu bar anc click on &lt;code&gt;new uVision Project&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Select &lt;code&gt;lpc2148&lt;/code&gt; in the menu and click it. &lt;strong&gt;Disable startup file&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Save the project in a new folder named &lt;code&gt;something&lt;/code&gt;. This folder name can be changed accordingly but all the dependency file should correspnd to it.&lt;/li&gt;&#xA;&lt;li&gt;Within this folder create a newfile called as &lt;code&gt;something.s&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Copy and paste this code in &lt;code&gt;something.s&lt;/code&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-1&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-1&#34;&gt;1&lt;/a&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-2&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-2&#34;&gt;2&lt;/a&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-3&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-3&#34;&gt;3&lt;/a&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-4&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-4&#34;&gt;4&lt;/a&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-5&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-5&#34;&gt;5&lt;/a&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-6&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-6&#34;&gt;6&lt;/a&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-7&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-7&#34;&gt;7&lt;/a&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-8&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-8&#34;&gt;8&lt;/a&gt;&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;AREA&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ONE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;READONLY&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;ENTRY&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;nf&#34;&gt;MOV&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;R0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#0X01&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#x9;&lt;span class=&#34;nf&#34;&gt;MOV&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;R1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#0X02&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#x9;&lt;span class=&#34;nf&#34;&gt;ADD&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;R2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;R1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;R0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;L&lt;/span&gt;&#x9;&lt;span class=&#34;no&#34;&gt;B&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;L&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;nf&#34;&gt;END&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;Click one the &lt;code&gt;source group&lt;/code&gt; on the left hand side and right click to &lt;strong&gt;add existing files&amp;hellip;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;Add the &lt;code&gt;something.s&lt;/code&gt; file, by checking the assembly files option&lt;/li&gt;&#xA;&lt;li&gt;Click &lt;strong&gt;translate&lt;/strong&gt; first on the menu bar and then click &lt;strong&gt;build&lt;/strong&gt; the second time.&lt;/li&gt;&#xA;&lt;li&gt;Now in the menu bar click on &lt;strong&gt;debug&lt;/strong&gt; and then click &lt;strong&gt;start/stop debug session&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;You can click &lt;strong&gt;run&lt;/strong&gt; to run everything or click on &lt;strong&gt;step&lt;/strong&gt; to run one line at a time&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;more-info-about-the-lpc2148&#34;&gt;More info about the lpc2148&lt;/h2&gt;&#xA;&lt;p&gt;The microcontroller lpc 2148 is a 32 bit memory controller.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
