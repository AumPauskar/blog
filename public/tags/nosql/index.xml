<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nosql on Aum&#39;s blogging site</title>
    <link>https://aumpauskar.github.io/blog/tags/nosql/</link>
    <description>Recent content in Nosql on Aum&#39;s blogging site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Jun 2024 23:21:23 +0530</lastBuildDate>
    <atom:link href="https://aumpauskar.github.io/blog/tags/nosql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MongoDB</title>
      <link>https://aumpauskar.github.io/blog/posts/dbms/mongo/</link>
      <pubDate>Thu, 27 Jun 2024 23:21:23 +0530</pubDate>
      <guid>https://aumpauskar.github.io/blog/posts/dbms/mongo/</guid>
      <description>&lt;h1 id=&#34;mongodb&#34;&gt;MongoDB&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;NoSQL databases are non-relational databases that are used to store and retrieve data. MongoDB is a popular NoSQL database that is used to store data in the form of documents.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Feature&lt;/th&gt;&#xA;          &lt;th&gt;SQL (Relational Databases)&lt;/th&gt;&#xA;          &lt;th&gt;NoSQL (Non-Relational Databases)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Schema&lt;/td&gt;&#xA;          &lt;td&gt;Fixed schema&lt;/td&gt;&#xA;          &lt;td&gt;Dynamic schema for unstructured data&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Scalability&lt;/td&gt;&#xA;          &lt;td&gt;Vertical scalability (scale-up by adding more powerful CPU, RAM, SSD)&lt;/td&gt;&#xA;          &lt;td&gt;Horizontal scalability (scale-out by adding more servers)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Complexity&lt;/td&gt;&#xA;          &lt;td&gt;Tables with rows and columns, complex queries with JOINs&lt;/td&gt;&#xA;          &lt;td&gt;Document, key-value, wide-column, or graph formats, simpler queries&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Transactions&lt;/td&gt;&#xA;          &lt;td&gt;ACID properties (Atomicity, Consistency, Isolation, Durability) for reliable transactions&lt;/td&gt;&#xA;          &lt;td&gt;BASE properties (Basically Available, Soft state, Eventual consistency) less strict than ACID&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Development Model&lt;/td&gt;&#xA;          &lt;td&gt;Mature, with established standards&lt;/td&gt;&#xA;          &lt;td&gt;More flexible and evolving rapidly&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Use Cases&lt;/td&gt;&#xA;          &lt;td&gt;Well-suited for complex queries and transactions, e.g., banking systems&lt;/td&gt;&#xA;          &lt;td&gt;Well-suited for hierarchical data storage, big data solutions, and real-time web applications&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Data Integrity&lt;/td&gt;&#xA;          &lt;td&gt;High, due to ACID compliance&lt;/td&gt;&#xA;          &lt;td&gt;Variable, depending on the specific NoSQL system and its configuration&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Query Language&lt;/td&gt;&#xA;          &lt;td&gt;Structured Query Language (SQL) is standardized&lt;/td&gt;&#xA;          &lt;td&gt;No standard; queries are based on the specific NoSQL database system (e.g., MongoDB uses BSON)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Relationship Handling&lt;/td&gt;&#xA;          &lt;td&gt;Efficient handling of relationships between entities&lt;/td&gt;&#xA;          &lt;td&gt;Relationships can be handled, but often less efficiently than SQL databases; denormalization is commonly practiced&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;&#xA;&lt;p&gt;There are two ways of working with a mongoDB database, one is to run it locally on your machine and the other is to use a cloud service like MongoDB Atlas. For this tutorial, we will be using MongoDB with mongosh and compass installed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Big data and hadoop ecosystem</title>
      <link>https://aumpauskar.github.io/blog/posts/dbms/big_data_hadoop/</link>
      <pubDate>Tue, 05 Dec 2023 12:17:46 +0530</pubDate>
      <guid>https://aumpauskar.github.io/blog/posts/dbms/big_data_hadoop/</guid>
      <description>&lt;h1 id=&#34;big-data&#34;&gt;Big data&lt;/h1&gt;&#xA;&lt;h2 id=&#34;just-data&#34;&gt;Just data&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Structured data: data that has a defined length and format for each record. It&amp;rsquo;s stored in a fixed format such as a relational database or spreadsheet. It&amp;rsquo;s easy to search and analyze. It&amp;rsquo;s used for transactional data.&lt;/li&gt;&#xA;&lt;li&gt;Unstructured data: data that has an unknown length and format. It&amp;rsquo;s stored in a free format such as a text file. It&amp;rsquo;s difficult to search and analyze. It&amp;rsquo;s used for non-transactional data.&lt;/li&gt;&#xA;&lt;li&gt;Semi-structured data: data that has a defined length and format for each record but doesn&amp;rsquo;t conform to the structure of a relational database. It&amp;rsquo;s stored in a semi-structured format such as XML or JSON. It&amp;rsquo;s easy to search and analyze. It&amp;rsquo;s used for non-transactional data.&lt;/li&gt;&#xA;&lt;li&gt;Types of data analysis&#xA;&lt;ol&gt;&#xA;&lt;li&gt;descriptive: what happened?&lt;/li&gt;&#xA;&lt;li&gt;diagnostic: why did it happen?&lt;/li&gt;&#xA;&lt;li&gt;predictive: what will happen?&lt;/li&gt;&#xA;&lt;li&gt;prescriptive: how can we make it happen?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;data-management-software&#34;&gt;Data management software&lt;/h2&gt;&#xA;&lt;h3 id=&#34;hadoop&#34;&gt;Hadoop&lt;/h3&gt;&#xA;&lt;p&gt;Hadoop is a framework for distributed storage and processing of large data sets using the MapReduce programming model. It consists of a distributed file system (HDFS) and a distributed processing framework (MapReduce). It&amp;rsquo;s written in Java and is open source. It&amp;rsquo;s designed to scale up from single servers to thousands of machines, each offering local computation and storage. Rather than rely on hardware to deliver high-availability, the library itself is designed to detect and handle failures at the application layer, so delivering a highly-available service on top of a cluster of computers, each of which may be prone to failures. Its use cases include data lake, data warehouse, data hub, data science, and data engineering. It&amp;rsquo;s used by Facebook, Yahoo, LinkedIn, eBay, and Twitter. It&amp;rsquo;s core components are HDFS, YARN, and MapReduce.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
