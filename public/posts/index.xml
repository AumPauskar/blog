<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Aum&#39;s blogging site</title>
    <link>https://aumpauskar.github.io/blog/posts/</link>
    <description>Recent content in Posts on Aum&#39;s blogging site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 07 Feb 2024 23:34:09 +0530</lastBuildDate><atom:link href="https://aumpauskar.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Autodesk Fusion and CAM</title>
      <link>https://aumpauskar.github.io/blog/posts/misc/autodeskfusion/</link>
      <pubDate>Wed, 07 Feb 2024 23:34:09 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/misc/autodeskfusion/</guid>
      <description>A brief overview of Fusion 360 and CAM.</description>
    </item>
    
    <item>
      <title>X.509 Certificate extension for 5G</title>
      <link>https://aumpauskar.github.io/blog/posts/computer_network/x509/</link>
      <pubDate>Wed, 03 Jan 2024 09:54:53 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/computer_network/x509/</guid>
      <description>A brief explanation of X.509 authentication certificates.</description>
    </item>
    
    <item>
      <title>Leetcode solutions</title>
      <link>https://aumpauskar.github.io/blog/posts/dsa/leetcode/</link>
      <pubDate>Sat, 30 Dec 2023 22:56:49 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/dsa/leetcode/</guid>
      <description>Leetcode solutions Problem 1: Two Sum 1 2 3 4 5 6 7 8 9 10 11 12 class Solution(object): def twoSum(self, nums, target): &amp;#34;&amp;#34;&amp;#34; :type nums: List[int] :type target: int :rtype: List[int] &amp;#34;&amp;#34;&amp;#34; for i in range(0, len(nums)): for j in range(0, len(nums)): if nums[i]+nums[j] == target and i!=j: op = [i,j] return op Problem 2: Roman to integer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Solution(object): def romanToInt(self, s): &amp;#34;&amp;#34;&amp;#34; :type s: str :rtype: int &amp;#34;&amp;#34;&amp;#34; roman = {&amp;#39;I&amp;#39;:1,&amp;#39;V&amp;#39;:5,&amp;#39;X&amp;#39;:10,&amp;#39;L&amp;#39;:50,&amp;#39;C&amp;#39;:100,&amp;#39;D&amp;#39;:500,&amp;#39;M&amp;#39;:1000,&amp;#39;IV&amp;#39;:4,&amp;#39;IX&amp;#39;:9,&amp;#39;XL&amp;#39;:40,&amp;#39;XC&amp;#39;:90,&amp;#39;CD&amp;#39;:400,&amp;#39;CM&amp;#39;:900} i = 0 num = 0 while i &amp;lt; len(s): if i+1&amp;lt;len(s) and s[i:i+2] in roman: num+=roman[s[i:i+2]] i+=2 else: #print(i) num+=roman[s[i]] i+=1 return num Problem 3: Pallindrome 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Solution(object): def isPalindrome(self, x): &amp;#34;&amp;#34;&amp;#34; :type x: int :rtype: bool &amp;#34;&amp;#34;&amp;#34; if x &amp;lt; 0: return False # Store the number in a variable number = x # This will store the reverse of the number reverse = 0 while number: reverse = reverse * 10 + number % 10 number //= 10 return x == reverse Problem 4: Longest Common Prefix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class Solution(object): def longestCommonPrefix(self, strs): &amp;#34;&amp;#34;&amp;#34; :type strs: List[str] :rtype: str &amp;#34;&amp;#34;&amp;#34; size = len(strs) # if size is 0, return empty string if (size == 0): return &amp;#34;&amp;#34; if (size == 1): return strs[0] # sort the array of strings strs.</description>
    </item>
    
    <item>
      <title>Operating systems</title>
      <link>https://aumpauskar.github.io/blog/posts/os/os/</link>
      <pubDate>Sat, 30 Dec 2023 17:09:25 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/os/os/</guid>
      <description>Operating systems Bases of an operating system Execute user programs and make solving user problems easier Make the computer system convenient to use Use the computer hardware in an efficient manner A computer system can be divided roughly into four components: the hardware, the operating system, the application programs, and the users.
Use of an operating system The operating system is responsible for the following activities in connection with process management Process creation and deletion Process suspension and resumption Provision of mechanisms for process synchronization Provision of mechanisms for process communication Provision of mechanisms for deadlock handling Operating systems is a resource allocator and it is a control program.</description>
    </item>
    
    <item>
      <title>ZSH configuration</title>
      <link>https://aumpauskar.github.io/blog/posts/misc/zsh/</link>
      <pubDate>Wed, 20 Dec 2023 06:58:03 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/misc/zsh/</guid>
      <description>ZSH configuration ZSH is a shell designed for interactive use, although it is also a powerful scripting language. Many of the useful features of bash, ksh, and tcsh were incorporated into zsh; many original features were added.
Installation Update and install ZSH can be installed on any linux based system using the following command:
1 2 sudo apt update sudo apt install zsh -y This will update the system binaries and install the zsh shell on the system.</description>
    </item>
    
    <item>
      <title>Raspberry Pi</title>
      <link>https://aumpauskar.github.io/blog/posts/iot/raspberry_pi/</link>
      <pubDate>Tue, 19 Dec 2023 21:29:49 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/iot/raspberry_pi/</guid>
      <description>Raspberry Pi The raspberry pi is a series of small single-board computers developed in the United Kingdom by the Raspberry Pi Foundation to promote teaching of basic computer science in schools and in developing countries.
Setting up Raspberry Pi As standard the Raspberry Pi comes without an operating system. It depends on the user which operating system is installed within the computer. The operating system can be installed on the Raspberry Pi using the following steps:</description>
    </item>
    
    <item>
      <title>Lab expriments and termworks</title>
      <link>https://aumpauskar.github.io/blog/posts/misc/lab_expts/</link>
      <pubDate>Sat, 16 Dec 2023 17:44:08 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/misc/lab_expts/</guid>
      <description>Lab expriments and termworks Computer Networks lab Template Title of the experiment Objective of the experiment Brief theory about the experiment Algorithm &amp;amp; Program Sample input/output with calculations if necessary Course Learning Outcome Conclusion References Termwork 1 (not included) Title of the experiment Objective of the experiment Brief theory about the experiment Algorithm &amp;amp; Program Sample input/output with calculations if necessary Course Learning Outcome Conclusion References James F Kurose and Keith W Ross, Computer Networking, A Top-Down Approach, Sixth	edition, Pearson,2017 .</description>
    </item>
    
    <item>
      <title>Building websites with React</title>
      <link>https://aumpauskar.github.io/blog/posts/web/react/</link>
      <pubDate>Fri, 15 Dec 2023 09:20:47 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/web/react/</guid>
      <description>React tutorial About the tutorial This short note is based and created assuming you are using a Linux (debian/ubuntu) system, most of the commands will run on other systems like Windows and Mac as well but may require some changes. In case you need to follow along and using a Windows system, you can use the Windows Subsystem for Linux to run the commands.
Installing react In order to install react, node and npm are required.</description>
    </item>
    
    <item>
      <title>Windows scripts with powershell and cmd</title>
      <link>https://aumpauskar.github.io/blog/posts/os/windows_scripts/</link>
      <pubDate>Thu, 07 Dec 2023 22:42:51 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/os/windows_scripts/</guid>
      <description>Windows prompts PowerShell PowerShell is a command-line shell and scripting language built on the .NET Framework. It is the successor to the Command Prompt. Commands are called cmdlets and are written in the form Verb-Noun. For example, Get-ChildItem lists the contents of a directory. There are a few aliases for common commands, such as ls for Get-ChildItem and rm for Remove-Item.
Write-Output: Prints a line in the shell New-Item: Creates a new file within the same directory Get-Content: Reads the contents of a file Set-Content: Writes the contents of a file Remove-Item: Deletes a file Get-ChildItem: Lists the contents of a directory Command Alias Description Write-Output echo Prints a line in the shell New-Item touch Creates a new file within the same directory Get-Content type Reads the contents of a file Set-Content echo Writes the contents of a file Remove-Item del Deletes a file Get-ChildItem dir Lists the contents of a directory CMD echo &amp;lt;line&amp;gt;: Prints a line in the shell type &amp;lt;file&amp;gt;: Reads the contents of a file file operations copy &amp;lt;source&amp;gt; &amp;lt;target&amp;gt;: Copies a file move &amp;lt;source&amp;gt; &amp;lt;target&amp;gt;: Moves a file del &amp;lt;file&amp;gt;: Deletes a file dir: Lists the contents of a directory cd commands: required to change the current directory cd &amp;lt;dir&amp;gt;: Changes the current directory cd .</description>
    </item>
    
    <item>
      <title>Image analysis theory</title>
      <link>https://aumpauskar.github.io/blog/posts/ml/image_analysis_theory/</link>
      <pubDate>Wed, 06 Dec 2023 00:12:10 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/ml/image_analysis_theory/</guid>
      <description>Image processing Theory jargon Difference between supervised and unsupervised learning Criteria Supervised Learning Unsupervised Learning Data Uses labeled data for training. Uses unlabeled data for training. Goal Predict a label for new data based on past observations. Discover hidden patterns or intrinsic structures within the data. Examples Classification, Regression Clustering, Association Complexity Less complex as it has a clear goal. More complex due to the lack of clear goal. Usage When the outcome of the problem is known.</description>
    </item>
    
    <item>
      <title>Big data and hadoop ecosystem</title>
      <link>https://aumpauskar.github.io/blog/posts/dbms/big_data_hadoop/</link>
      <pubDate>Tue, 05 Dec 2023 12:17:46 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/dbms/big_data_hadoop/</guid>
      <description>Big data Just data Structured data: data that has a defined length and format for each record. It&amp;rsquo;s stored in a fixed format such as a relational database or spreadsheet. It&amp;rsquo;s easy to search and analyze. It&amp;rsquo;s used for transactional data. Unstructured data: data that has an unknown length and format. It&amp;rsquo;s stored in a free format such as a text file. It&amp;rsquo;s difficult to search and analyze. It&amp;rsquo;s used for non-transactional data.</description>
    </item>
    
    <item>
      <title>Image analysis with pytorch</title>
      <link>https://aumpauskar.github.io/blog/posts/ml/image_analysis/</link>
      <pubDate>Sun, 03 Dec 2023 20:40:58 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/ml/image_analysis/</guid>
      <description>Image Analysis using pytorch Prerequisites This project is built using python in Ubuntu (WSL) and you&amp;rsquo;ll need to install the following:
Any bash terminal (one of the following) Conda WSL Mac OS Any flavour of Linux Python 3 (I&amp;rsquo;m using 3.10.12) 1 2 sudo apt update sudo apt install python3 Pip 1 2 sudo apt update sudo apt install python3-pip Packages Note: Since I&amp;rsquo;m using a computer with a CUDA compatable NVIDIA GPU, I&amp;rsquo;ll be using the GPU version of pytorch.</description>
    </item>
    
    <item>
      <title>Extended markdown cheatsheet with KaTeX</title>
      <link>https://aumpauskar.github.io/blog/posts/cheatsheet/e_markdown_cheatsheet/</link>
      <pubDate>Sat, 25 Nov 2023 09:46:19 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/cheatsheet/e_markdown_cheatsheet/</guid>
      <description>Extended Markdown Cheatsheet Heading 1 2 3 4 5 6 # Heading 1 ## Heading 2 ### Heading 3 #### Heading 4 ##### Heading 5 ###### Heading 6 Paragraph 1 This is a paragraph. Code snippet 1 &amp;#39;print(&amp;#34;Hello World&amp;#34;)&amp;#39; block of code
1 2 3 &amp;#39;&amp;#39;&amp;#39; print(&amp;#34;Hello World&amp;#34;) &amp;#39;&amp;#39;&amp;#39; code within the clock of code can be selectively highlighted
1 2 3 &amp;#39;&amp;#39;&amp;#39;python print(&amp;#34;Hello World&amp;#34;) &amp;#39;&amp;#39;&amp;#39; Emphasis 1 2 3 4 5 *This text will be italic* _This will also be italic_ **This text will be bold** __This will also be bold__ _You **can** combine them_ Table 1 2 3 4 | Syntax | Description | | ----------- | ----------- | | Header | Title | | Paragraph | Text | Bulletpoints 1 2 3 4 - Bulletpoint 1 - Bulletpoint 2 - Bulletpoint 2.</description>
    </item>
    
    <item>
      <title>Git and GitHub cheatsheet</title>
      <link>https://aumpauskar.github.io/blog/posts/cheatsheet/git_cheatsheet/</link>
      <pubDate>Sat, 25 Nov 2023 09:46:03 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/cheatsheet/git_cheatsheet/</guid>
      <description>Git / github cheatsheet Installation of git Download git from here or use on debian based linux 1 2 sudo apt update sudo apt install git Check if git is installed 1 git --version Configure git 1 2 git config --global user.name &amp;#34;Your Name&amp;#34; git config --global user.email &amp;#34;Your email&amp;#34; (Optional) Change the default brach name from master to main 1 git config --global init.defaultBranch main Configuring SSH keys to github Run these commands on the terminal 1 2 3 4 ssh-keygen -t ed25519 -C &amp;#34;$Your email&amp;#34; eval &amp;#34;$(ssh-agent -s)&amp;#34; ssh-add ~/.</description>
    </item>
    
    <item>
      <title>OOPS with Python and packages</title>
      <link>https://aumpauskar.github.io/blog/posts/python/python_oops/</link>
      <pubDate>Thu, 23 Nov 2023 13:21:20 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/python/python_oops/</guid>
      <description>Python Chapter summary - Unit 1 Unit 1 Python Fundamentals: An Introduction to Python programming: Introduction to Python, IDLE to develop programs; How to write your first programs: Basic coding skills, data types and variables, numeric data, string data, five of the Python functions; Control statements: Boolean expressions, selection structure, iteration structure; Define and use Functions and Modules: define and use functions, more skills for defining and using functions and modules, create and use modules, standard modules Contents What is python?</description>
    </item>
    
    <item>
      <title>Linux</title>
      <link>https://aumpauskar.github.io/blog/posts/os/linux/</link>
      <pubDate>Thu, 23 Nov 2023 12:52:03 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/os/linux/</guid>
      <description>A brief overview and commands based on the linux operating system</description>
    </item>
    
    <item>
      <title>Computer networks</title>
      <link>https://aumpauskar.github.io/blog/posts/computer_network/cn/</link>
      <pubDate>Thu, 23 Nov 2023 12:50:11 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/computer_network/cn/</guid>
      <description>Computer networks Packets In networking, a packet is a small segment of a larger message. Data sent over computer networks*, such as the Internet, is divided into packets. These packets are then recombined by the computer or device that receives them. The Internet is a &amp;ldquo;packet switching&amp;rdquo; network. Packet switching refers to the ability of networking equipment to process packets independently from each other. It also means that packets can take different network paths to the same destination, so long as they all arrive at the destination.</description>
    </item>
    
    <item>
      <title>Modulated motor control with arduino</title>
      <link>https://aumpauskar.github.io/blog/posts/projects/motor_encoder/</link>
      <pubDate>Tue, 21 Nov 2023 22:20:04 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/projects/motor_encoder/</guid>
      <description>Motor Encoder Components Arduino Uno 4x4 Keypad I2C LCD DC Motor with encoder L293D Motor Driver Connections Display connections From (I2C display) To (arduino) 1 VCC 5V 2 GND GND 3 SDA SDA 4 SCL SCL Keypad connections From (Keypad) To (arduino) 1 Row 1 D13 2 Row 2 D12 3 Row 3 D11 4 Row 4 D10 5 Col 1 D9 6 Col 2 D8 7 Col 3 D7 8 Col 4 D4 Motor connections From (Motor) To 1 Motor negative Output 4 (L293D) 2 Motor positive Output 3 (L293D) 3 Encoder ground GND (L293D) 4 Channel B D3 (arduino) 5 Channel A D2 (arduino) 6 Encoder power 5V (arduino) L293D connections From (L293D) To (arduino) 1 Power 1 5V 2 Input 4 D5 3 Output 4 refer above 4 Ground GND (both arduino/motor) 5 Ground GND (both arduino/motor) 6 Output 3 refer above 7 Input 3 D6 8 Enable 3,4 5V 9 Enable 1,2 5V 10 Input 1 N/A 11 Output 1 N/A 12 Ground GND 13 Ground GND 14 Output 2 N/A 15 Input 2 N/A 16 Power 2 5V Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 // ---------- // keypad setup #include &amp;lt;Keypad.</description>
    </item>
    
    <item>
      <title>Working with ARM microcontroller using Keil uVision4</title>
      <link>https://aumpauskar.github.io/blog/posts/iot/arm/</link>
      <pubDate>Mon, 20 Nov 2023 12:59:45 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/iot/arm/</guid>
      <description>A basic introduction to ARM and how to run ARM IC within a simulator - LPC2148</description>
    </item>
    
    <item>
      <title>Web technologies - basic HTML/CSS/JS</title>
      <link>https://aumpauskar.github.io/blog/posts/web/html-web/</link>
      <pubDate>Fri, 17 Nov 2023 09:21:22 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/web/html-web/</guid>
      <description>Web notes FYI CSA: Client server architecture A web can be two tier, three tier, n tier having different applets for different purposes HTML: Hypertext markup lang, CSS: Cascading stylesheet, JS: Javascript P2P: Peer to peer architecture DOM: Document Object Model (DOM) is a file model wherein all the files are shown in a multiinterface structural model Tree stucture: A tree structure is a model where the start point is a single node but as we go down the model the number of nodess increase just like a tree.</description>
    </item>
    
    <item>
      <title>Static site generators with Hugo</title>
      <link>https://aumpauskar.github.io/blog/posts/web/static-site-generators/</link>
      <pubDate>Fri, 17 Nov 2023 09:19:25 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/web/static-site-generators/</guid>
      <description>Static site generators A short guide on how this site was created using hugo.
Introduction There are multiple ways of creating of a website, if for example a simple site needs to be created with minimal content and updates a static site might be adequate, however if the site needs a frontend, backend and a database then a dynamic site is required. If the content is the only thing that matters and the content needs to be updated regularly then a static site generator is required.</description>
    </item>
    
    <item>
      <title>Database management and SQL</title>
      <link>https://aumpauskar.github.io/blog/posts/dbms/sql/</link>
      <pubDate>Thu, 16 Nov 2023 14:41:25 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/dbms/sql/</guid>
      <description>Sql documentation Installation The installation and usage of MySQL can be done in many ways; one is to install WAMP/XAMPP server and using SQL through it another is to use an online sql emulator, the best way is to use a MySQL server.
Getting started with MySQL All the operations in SQL can be classified into 3 types DDL: Data definition language includes operation like create, alter, drop DML: Data manipulation language includes operation like select, insert, update, delete DCL: Data control language includes operations like commit, rollback, grant, revoke</description>
    </item>
    
    <item>
      <title>Basic DSA algorithms using C</title>
      <link>https://aumpauskar.github.io/blog/posts/dsa/dsabasics/</link>
      <pubDate>Thu, 16 Nov 2023 10:38:34 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/dsa/dsabasics/</guid>
      <description>A complete guide ds Termwork 1 - Infix evaluation Algorithm Create an empty stack (operandStack) to store operands and an empty stack (operatorStack) to store operators. Initialize a variable (result) to store the final output Iterate through each character of the infix expression. If the current character is an operand, add it to the operandStack. If the current character is an operator, pop operators from operatorStack and add them to operandStack until an operator with lower precedence is found.</description>
    </item>
    
    <item>
      <title>Using i386 IC using Keil uVision5 and Embedded C</title>
      <link>https://aumpauskar.github.io/blog/posts/iot/embeddedc/</link>
      <pubDate>Thu, 16 Nov 2023 10:37:42 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/iot/embeddedc/</guid>
      <description>Embedded C Embedded C is used in embedded systems and iot deviced such as Arduino and mico IC&amp;rsquo;s. To emulate this we can use Keil, however this can be only run on Windows, to run this on linux based distros use wine.
Procedure to run The following are the steps to run a code on Keil Note: Here we are working on intel 8051AH microcontroller
Install and run keil If you are on a windows system you can run the exe file locally, if you are on a linux machine you can run keil through wine and it will function just like you are running it on windows natively.</description>
    </item>
    
    <item>
      <title>Arduino control with peripherals</title>
      <link>https://aumpauskar.github.io/blog/posts/iot/arduino/</link>
      <pubDate>Thu, 16 Nov 2023 10:37:04 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/iot/arduino/</guid>
      <description>Arduino 14 IO, 6//
ESP 8266 wifi
Sketch - name of the program Setup - IO setup Loop - while loop DHT 11 sol moisture SR04 ultrasonic HC05 bluetooth ESP 01 wifi
Q. LED blink 1 2 3 4 5 6 7 8 9 10 11 const int ledVar = 13; void setup() { pinMode(ledVar, OUTPUT); } void loop() { digitalWrite(ledVar, HIGH); delay(1000); digitalWrite(ledVar, LOW); delay(1000); } Q. Interface dht 11 with arduino uno and display humidity and temperature on serial monitor 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include &amp;lt;dht.</description>
    </item>
    
    <item>
      <title>OOPS with Java</title>
      <link>https://aumpauskar.github.io/blog/posts/java/javafull/</link>
      <pubDate>Thu, 16 Nov 2023 10:35:36 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/java/javafull/</guid>
      <description>Java tutorial Java is a cross platform compiled language that uses jvm (java virtual machine) that can be used in any machine no matter the hardware or software, provided the machine supports jvm
FYI The object class is the root of all classes Data can be gatered with the scanner method in the java library but cannot cater charecter type data with the standard library. Those can be gathered by sc = next().</description>
    </item>
    
    <item>
      <title>Virtualenv</title>
      <link>https://aumpauskar.github.io/blog/posts/python/virtualenv/</link>
      <pubDate>Thu, 16 Nov 2023 10:34:31 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/python/virtualenv/</guid>
      <description>Python virtual environment Python virtual environemt is a program that aids in creating a serperate virtual environment for each project
Requiremnets Python 3 Pip Steps Installing virtual environemnt package 1 pip install virtualenv Creating virtual environent Windows - cmd/powershell
1 py -m venv {your_env_name} Linux
1 python3 -m venv myworld Activating virtual environemt Windows - cmd
1 myworld\Scripts\activate.bat Windows - powershell
1 myworld\Scripts\activate.ps1 Linux
1 source myworld/bin/activate Downloading required packages 1 py -m pip install {required_package} </description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://aumpauskar.github.io/blog/posts/my-first-post/</link>
      <pubDate>Thu, 16 Nov 2023 09:46:38 +0530</pubDate>
      
      <guid>https://aumpauskar.github.io/blog/posts/my-first-post/</guid>
      <description>Hello World This is my first post
1 print(&amp;#34;Hello World&amp;#34;) </description>
    </item>
    
    
  </channel>
</rss>
